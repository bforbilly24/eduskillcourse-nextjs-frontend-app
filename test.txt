'use client';

import Image from 'next/image';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { useState } from 'react';
import ToggleTheme from '@/hooks/toggle-theme';
import { navMenuItem } from '@/utils/constants';
import CloseIcon from '@/components/svgs/close-icon';
import HamburgerIcon from '@/components/svgs/hamburger-icon';

function Navbar() {
	const pathname = usePathname();
	const [isMenuOpen, setIsMenuOpen] = useState(false);

	const toggleMenu = () => {
		setIsMenuOpen(!isMenuOpen);
	};

	return (
		<nav className='container mx-auto w-full flex items-center justify-between py-4 relative'>
			<div className='flex items-center justify-between w-full md:w-auto'>
				<Image src='/images/brand/logo.png' width={173} height={54} alt='logo_eduskill' />

				{/* Mobile: Hamburger Menu and Button */}
				<div className='flex items-center xl:hidden gap-x-3'>
					<Link href='https://eduskill.myr.id/pl/basic-web-development'>
						<button className='text-white bg-eduskill px-4 py-[10px] h-10 w-[115px] text-sm font-semibold leading-5 rounded-lg shadow-2xl shadow-black/5 dark:shadow-gray-100/5 ml-4'>Daftar Kelas</button>
					</Link>
					<button className='outline-none' onClick={toggleMenu}>
						{isMenuOpen ? <CloseIcon className='fill-black dark:fill-gray-200' /> : <HamburgerIcon className='fill-black dark:fill-gray-200' />}
					</button>
				</div>
			</div>

			{/* Desktop Menu */}
			<div className='hidden md:flex gap-x-8 items-center'>
				{navMenuItem.map((item) => (
					<Link href={item.slug} key={item.id}>
						<p className={`text-base font-medium leading-6 ${pathname === item.slug ? 'font-bold text-eduskill' : 'text-[#101828] dark:text-gray-200 hover:text-eduskill-400'}`}>{item.name}</p>
					</Link>
				))}
				<Link href='https://eduskill.myr.id/pl/basic-web-development'>
					<button className='text-white bg-eduskill px-4 py-[10px] h-10 w-[115px] text-sm font-semibold leading-5 rounded-lg shadow-2xl shadow-black/5 dark:shadow-gray-100/5'>Daftar Kelas</button>
				</Link>
				<ToggleTheme />
			</div>

			{/* Mobile Menu */}
			<div className={`md:hidden ${isMenuOpen ? 'block' : 'hidden'} w-[25rem] rounded-lg dark:bg-gray-950/90 bg-white/90 backdrop-blur-xl text-white absolute top-20 left-1/2 transform -translate-x-1/2 shadow-md`}>
				<div className='flex flex-col items-start p-4 gap-y-5'>
					{navMenuItem.map((item) => (
						<Link href={item.slug} key={item.id} className='w-full'>
							<p className={`text-base font-medium px-5 py-2 w-full ${pathname === item.slug ? 'bg-eduskill rounded-md text-white' : 'text-black dark:text-white hover:bg-gray-600 rounded-md'}`}>{item.name}</p>
						</Link>
					))}
				</div>
			</div>
		</nav>
	);
}

export { Navbar };


'use client';

import { useEffect, useState } from 'react';
import { Navbar } from '@/components/navigation/navbar';
import AppBar from './appbar';

function Header() {
	const [isScrolled, setIsScrolled] = useState(false);

	useEffect(() => {
		const handleScroll = () => {
			const headerBlur = document.getElementById('headerBlur');
			if (headerBlur) {
				const { top } = headerBlur.getBoundingClientRect();
				if (top <= 0) {
					if (!isScrolled) {
						setIsScrolled(true);
					}
				} else {
					if (isScrolled) {
						setIsScrolled(false);
					}
				}
			}
		};

		window.addEventListener('scroll', handleScroll);
		return () => window.removeEventListener('scroll', handleScroll);
	}, [isScrolled]);

	return (
		<header className={`transition-shadow duration-300 fixed xl:top-0 xl:left-0 xl:h-[100px] h-0 xl:right-0 bottom-0 w-full z-50 ${isScrolled ? 'bg-white/60 shadow-md backdrop-blur-3xl' : 'bg-transparent'} dark:bg-gray-950/80 dark:backdrop-blur-xl`}>
			<Navbar />
			<AppBar />
		</header>
	);
}

export { Header };




'use client';

import Image from 'next/image';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { useState } from 'react';
import ToggleTheme from '@/hooks/toggle-theme';
import { navMenuItem } from '@/utils/constants';
import CloseIcon from '../svgs/close-icon';
import HamburgerIcon from '../svgs/hamburger-icon';

function Navbar() {
	const pathname = usePathname();
	const [isMenuOpen, setIsMenuOpen] = useState(false);

	const toggleMenu = () => {
		setIsMenuOpen(!isMenuOpen);
	};

	return (
		<nav className='container mx-auto w-full flex items-center justify-between py-4 relative'>
			{/* Logo */}
			<div className='flex items-center justify-between w-full md:w-auto'>
				<Image src='/images/brand/logo.png' width={173} height={54} alt='logo_eduskill' />

				{/* Mobile: Hamburger Menu and Button */}
				<div className='flex items-center md:hidden'>
					<Link href='https://eduskill.myr.id/pl/basic-web-development'>
						<button className='text-white bg-eduskill px-4 py-[10px] h-10 w-[115px] text-sm font-semibold leading-5 rounded-lg shadow-2xl shadow-black/5 dark:shadow-gray-100/5 ml-4'>Daftar Kelas</button>
					</Link>
					<button className='text-gray-500 focus:outline-none ml-4' onClick={toggleMenu}>
						{isMenuOpen ? <CloseIcon className='fill-black dark:fill-gray-200' /> : <HamburgerIcon className='fill-black dark:fill-gray-200' />}
					</button>
				</div>
			</div>

			{/* Desktop Menu */}
			<div className='hidden md:flex gap-x-8 items-center'>
				{navMenuItem.map((item) => (
					<Link href={item.slug} key={item.id}>
						<p className={`text-base font-medium leading-6 ${pathname === item.slug ? 'font-bold text-eduskill' : 'text-[#101828] dark:text-gray-200 hover:text-eduskill-400'}`}>{item.name}</p>
					</Link>
				))}
				<Link href='https://eduskill.myr.id/pl/basic-web-development'>
					<button className='text-white bg-eduskill px-4 py-[10px] h-10 w-[115px] text-sm font-semibold leading-5 rounded-lg shadow-2xl shadow-black/5 dark:shadow-gray-100/5'>Daftar Kelas</button>
				</Link>
				<ToggleTheme />
			</div>

			{/* Mobile Menu */}
			<div className={`md:hidden ${isMenuOpen ? 'block' : 'hidden'} w-[400px] rounded-lg dark:bg-gray-950/60 bg-white/40 backdrop-blur-3xl text-white absolute top-20 left-1/2 transform -translate-x-1/2 z-10 shadow-md`}>
				<div className='flex flex-col items-start p-4 gap-y-5'>
					{navMenuItem.map((item) => (
						<Link href={item.slug} key={item.id} className='w-full'>
							<p className={`text-base font-medium px-5 py-2 w-full ${pathname === item.slug ? 'bg-eduskill rounded-md text-white' : 'text-black dark:text-white hover:bg-gray-700'}`}>{item.name}</p>
						</Link>
					))}
				</div>
			</div>
		</nav>
	);
}

export { Navbar };


'use client';

import { Splide, SplideSlide } from '@splidejs/react-splide';
import { motion } from 'framer-motion';
import { useEffect, useRef, useState } from 'react';
import ChevronLeftIcon from '@/components/svgs/chevron-right-icon';
import { categoriesClass } from '@/utils/constants';

const CategoriesSlider = () => {
	const [activeIndex, setActiveIndex] = useState(0);
	const [loading, setLoading] = useState(true);
	const splideRef = useRef(null);

	// Total number of slides
	const totalSlides = categoriesClass.length;

	useEffect(() => {
		const timer = setTimeout(() => setLoading(false), 2000);
		return () => clearTimeout(timer);
	}, []);

	const handleIndicatorClick = (index) => {
		if (splideRef.current) {
			splideRef.current.go(index);
		}
		setActiveIndex(index);
	};

	const handleSlideChange = (splide) => {
		setActiveIndex(splide.index);
	};

	return loading ? (
		<div className='w-full flex flex-col gap-y-10 overflow-hidden'>
			<div className='flex gap-x-10'>
				{[...Array(3)].map((_, index) => (
					<div key={index} className='w-[24.375rem] h-[15.188rem] bg-gray-200 animate-pulse border-2 border-[#D8D8D8]/40 rounded-[0.75rem] flex-shrink-0'>
						<div className='flex flex-col gap-y-5 w-full h-full justify-between p-8'>
							<div className='bg-gray-300 h-8 w-2/3 rounded-md'></div>
							<div className='bg-gray-300 h-4 w-1/2 rounded-md'></div>
							<div className='flex gap-x-2 items-center'>
								<div className='bg-gray-300 h-4 w-16 rounded-full'></div>
								<div className='bg-gray-300 h-4 w-4 rounded-full'></div>
							</div>
						</div>
					</div>
				))}
			</div>

			<div className='flex gap-x-3 items-center justify-center'>
				{[...Array(2)].map((_, index) => (
					<div key={index} className='w-3 h-3 bg-gray-300 rounded-full animate-pulse' />
				))}
			</div>
		</div>
	) : (
		<div className='w-full flex flex-col gap-y-10'>
			<Splide
				ref={splideRef}
				options={{
					type: 'loop',
					perPage: 3,
					perMove: 1,
					gap: '2.5rem',
					pagination: false,
					arrows: false,
					drag: true,
					snap: true,
					rewind: true,
					speed: 600,
					easing: 'ease',
					breakpoints: {
						640: {
							perPage: 1,
						},
					},
				}}
				onMoved={handleSlideChange}
			>
				{categoriesClass.map((item) => (
					<SplideSlide key={item.id}>
						<div className='w-full h-[15rem] xl:w-[24.375rem] xl:h-[15.188rem] group px-10 py-[1.875rem] bg-white dark:bg-gray-800 border-2 border-[#D8D8D8]/40 dark:border-gray-50/40 rounded-[0.75rem] hover:bg-eduskill dark:hover:bg-eduskill hover:border-eduskill-400/40'>
							<div className='flex flex-col gap-y-[1.375rem] w-full h-full justify-between'>
								<div className='flex flex-col gap-y-[1.875rem] items-start justify-center'>
									<div className='gap-x-5 flex items-center justify-start w-full'>
										<div className='group-hover:text-white'>{item.icon}</div>
										<h5 className='line-clamp-1 leading-[150%] font-bold text-[#101828] dark:text-gray-100 text-2xl tracking-[2%] group-hover:text-white group-hover:text-xl transition-all duration-300'>{item.category}</h5>
									</div>
									<div className='w-[18.313rem] line-clamp-2 flex items-center justify-start'>
										<p className='text-[#646464] dark:text-gray-300 text-base leading-[180%] font-normal group-hover:text-white'>{item.desc}</p>
									</div>
								</div>
								<div className='w-full flex gap-x-[1.313rem] items-center justify-start'>
									<p className='font-medium text-eduskill text-base leading-[140%] group-hover:text-white'>Selengkapnya</p>
									<ChevronLeftIcon className='fill-eduskill group-hover:fill-white' />
								</div>
							</div>
						</div>
					</SplideSlide>
				))}
			</Splide>

			<div className='flex gap-x-3 items-center justify-center'>
				{Array.from({ length: totalSlides }).map((_, index) => (
					<motion.div
						key={index}
						onClick={() => handleIndicatorClick(index)}
						className={`cursor-pointer rounded-full ${activeIndex === index ? 'bg-eduskill w-12 h-3' : 'bg-[#D9D9D9] w-3 h-3'}`}
						animate={{
							width: activeIndex === index ? '3rem' : '0.75rem',
							backgroundColor: activeIndex === index ? '#FF7B00' : '#D9D9D9',
						}}
						transition={{ duration: 0.3, ease: 'easeInOut' }}
					/>
				))}
			</div>
		</div>
	);
};

export default CategoriesSlider;
